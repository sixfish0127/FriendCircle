<div class="middle-sidebar-bottom">
    <div class="middle-sidebar-left">
        <div class="row">
            <div class="col-lg-12">
                <div class="card w-100 border-0 p-0 bg-white shadow-xss rounded-xxl">
                    <!-- 背景 -->
                    <div class="card-body h250 p-0 rounded-xxl overflow-hidden m-3"><img src="/images/u-bg.jpg" alt="image"></div>                    
                    <div class="card-body p-0 position-relative" id="user-profile" data-uid="@Model.id">
                        <figure class="avatar position-absolute w100 z-index-1" style="top:-40px; left: 30px;"><img src="@Model.userimage" alt="image" class="float-right p-1 bg-white rounded-circle w-100"></figure>
                        <h4 class="fw-700 font-sm mt-2 mb-lg-5 mb-4 pl-15"> <span class="fw-500 font-xssss text-grey-500 mt-1 mb-3 d-block">@Model.name</span></h4>
                        @{
                            int LoginId = ViewBag.LoginId;
                            FriendShip friendShip = ViewBag.FriendShip;
							// 如果登入者不是目前使用者，顯示添加好友按鈕
                            if (LoginId != @Model.id)
                            {
                                if (friendShip.Status == FriendshipStatus.Accepted)
                                {                                    
                                    <div class="d-flex align-items-center justify-content-center position-absolute-md right-15 top-0 me-2">
                                        <button type="button" class="d-none d-lg-block btn btn-danger p-3 z-index-1 rounded-3 font-xsssss text-uppercase fw-700 ls-3" onclick="sendFriendRequest(@LoginId,@Model.id)">解除好友</button>
                                        <a href="#" class="d-none d-lg-block bg-greylight btn-round-lg ms-2 rounded-3 text-grey-700"><i class="feather-mail font-md"></i></a>
                                    </div>
                                }else{
                                    <div class="d-flex align-items-center justify-content-center position-absolute-md right-15 top-0 me-2">
                                        <button type="button" class="d-none d-lg-block bg-success p-3 z-index-1 rounded-3 font-xsssss text-uppercase fw-700 ls-3" onclick="sendFriendRequest(@LoginId,@Model.id)">好友邀請</button>
                                        <a href="#" class="d-none d-lg-block bg-greylight btn-round-lg ms-2 rounded-3 text-grey-700"><i class="feather-mail font-md"></i></a>
                                    </div>
                                }                                
                            }
                        }                           
                    </div>                   
                </div>
            </div>
            <div class="col-xl-4 col-xxl-3 col-lg-4 pe-0">
                <div class="card w-100 shadow-xss rounded-xxl border-0 mb-3">
                    <div class="card-body d-block p-4">
                        <h4 class="fw-700 mb-3 font-xsss text-grey-900">About</h4>
                        <p class="fw-500 lh-24 font-xssss mb-0">@Model.description</p>
                    </div>

                    <div class="card-body border-top-xs d-flex">
                        <i class="feather-lock text-grey-500 me-3 font-lg"></i>
                        <h4 class="fw-700 text-grey-900 font-xssss mt-0">Private <span class="d-block font-xssss fw-500 mt-1 lh-3 text-grey-500">What's up, how are you?</span></h4>
                    </div>

                    <div class="card-body d-flex pt-0">
                        <i class="feather-eye text-grey-500 me-3 font-lg"></i>
                        <h4 class="fw-700 text-grey-900 font-xssss mt-0">Visble <span class="d-block font-xssss fw-500 mt-1 lh-3 text-grey-500">Anyone can find you</span></h4>
                    </div>
                    <div class="card-body d-flex pt-0">
                        <i class="feather-map-pin text-grey-500 me-3 font-lg"></i>
                        <h4 class="fw-700 text-grey-900 font-xssss mt-1">Flodia, Austia </h4>
                    </div>
                    <div class="card-body d-flex pt-0">
                        <i class="feather-users text-grey-500 me-3 font-lg"></i>
                        <h4 class="fw-700 text-grey-900 font-xssss mt-1">Genarel Group</h4>
                    </div>
                </div>
            </div>
            <div class="col-xl-8 col-xxl-9 col-lg-8">
                <div id="posts-container">
                    <!-- 貼文區塊 -->
                </div>

                <div class="card w-100 text-center shadow-xss rounded-xxl border-0 p-4 mb-3 mt-3" id="loading">
                    <div class="snippet mt-2 ms-auto me-auto" data-title=".dot-typing">
                        <div class="stage">
                            <div class="dot-typing"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    let currentPage = 1;     // 當前頁碼
    const pageSize = 10;     // 每次加載的貼文數量
    let isLoading = false;   // 防止重複加載
    let currentUser = ''; // 用來儲存目前登入的使用者名稱    
    document.addEventListener('DOMContentLoaded', () => {
        const userElement = document.getElementById('user-profile');
        if(userElement){
			const userid = userElement.getAttribute('data-uid');
			if(userid){
                const loadingIndicator = document.getElementById('loading');                
                loadingIndicator.style.display = 'none';
                //加載初始貼文
                loadMorePosts(userid);
                // 滾動事件
                window.addEventListener("scroll",()=>{
                    if(isLoading) return;
                    //當滾動接近頁面底部時觸發
                    if(window.innerHeight + window.scrollY >= document.body.offsetHeight - 500){
                        loadMorePosts(userid);
                    }
                });
            }else{
				console.error('User ID not found');
            }
        }else{
			console.error('User profile element not found');
        }
        
    });
    //發送好友邀請
    function sendFriendRequest(sendId,receiverId){
        console.log("Sending friend request for user:", sendId, receiverId);
        fetch('/api/friends/send-request', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ 
                sendId: sendId,
                receiverId:receiverId
            })
        })
        .then(response => {
            if (!response.ok) {
                return response.text().then(text => { throw new Error(text); });
            }
            return response.json(); // 解析 JSON 回應
        })
        .then(data => {
            console.log('Friend request sent:', data);
        })
        .catch(error =>  {
            console.error('Error:', error.message);
        });
    }
    // 切換留言顯示
    function toggleComments(event,postId){
        const commentsSection = document.getElementById(`comments-${postId}`);
        event.preventDefault(); // 防止預設行為
        if(commentsSection.style.display==='none'|| commentsSection.style.display === ''){
            //隱藏時顯示
            commentsSection.style.display='block';
        }else{
            //顯示時隱藏
            commentsSection.style.display = 'none';
        }
    }

    //新增貼文
    function addPostToContainer(container, post) {
        console.log('Adding post:', post); // 确认 post 对象是否正确
        const postDiv = document.createElement('div');
        const content = post.content || 'No content available'; // 處理空值情況
        const relativeTime = calculateRelativeTime(post.createdAt);//計算時間
        const maxContentLength=50;//最大顯示字數
        const isLongContent = content.length>maxContentLength;//是否超過最大顯示字數
        //初始顯示內容
        const truncatedContent = isLongContent
            ? content.substring(0,maxContentLength)+"...."
            : content;
        console.log('PostID:',post.id);
        postDiv.className='card w-100 shadow-xss rounded-xxl border-0 p-4 mb-0';
        postDiv.innerHTML = `
                <div class="card-body p-0 d-flex">
                    <figure class="avatar me-3 m-0"><img src="${post.image}" alt="image" class="shadow-sm rounded-circle w45"></figure>
                    <h4 class="fw-700 text-grey-900 font-xssss mt-1">${post.user} <span class="d-block font-xssss fw-500 mt-1 lh-3 text-grey-500">${relativeTime}</span></h4>
                </div>
                    <div class="card-body p-0 me-lg-5">
                        <p class="fw-500 text-500 lh-26 font-xssss w-100 post-content">${truncatedContent}</p>
                        ${isLongContent?'<a href="#" class="fw-600 text-primary ms-2 see-more">See more</a>':''}
                    </div>
                    <div class="card-body d-flex p-0">
                        <a href="#" class="emoji-bttn d-flex align-items-center fw-600 text-grey-900 text-dark lh-26 font-xssss me-2"><i class="feather-thumbs-up text-white bg-primary-gradiant me-1 btn-round-xs font-xss" onclick="addReaction(event,${post.id},0)"></i> <i class="feather-heart text-white bg-red-gradiant me-2 btn-round-xs font-xss" onclick="addReaction(event,${post.id},1)"></i><span id="reaction-count-${post.id}"></span></a>
                        <div class="emoji-wrap">
                            <ul class="emojis list-inline mb-0">
                                <li class="emoji list-inline-item"><i class="em em---1"></i> </li>
                                <li class="emoji list-inline-item"><i class="em em-angry"></i></li>
                                <li class="emoji list-inline-item"><i class="em em-anguished"></i> </li>
                                <li class="emoji list-inline-item"><i class="em em-astonished"></i> </li>
                                <li class="emoji list-inline-item"><i class="em em-blush"></i></li>
                                <li class="emoji list-inline-item"><i class="em em-clap"></i></li>
                                <li class="emoji list-inline-item"><i class="em em-cry"></i></li>
                                <li class="emoji list-inline-item"><i class="em em-full_moon_with_face"></i></li>
                            </ul>
                        </div>
                        <a href="#" class="d-flex align-items-center fw-600 text-grey-900 text-dark lh-26 font-xssss" onclick="toggleComments(event,${post.id})"><i class="feather-message-circle text-dark text-grey-900 btn-round-sm font-lg"></i><span class="d-none-xss" id="comment-count-${post.id}"></span></a>
                        <a href="#" id="dropdownMenu31" data-bs-toggle="dropdown" aria-expanded="false" class="ms-auto d-flex align-items-center fw-600 text-grey-900 text-dark lh-26 font-xssss"><i class="feather-share-2 text-grey-900 text-dark btn-round-sm font-lg"></i><span class="d-none-xs">Share</span></a>
                    <div class="dropdown-menu dropdown-menu-end p-4 rounded-xxl border-0 shadow-lg" aria-labelledby="dropdownMenu31">
                        <h4 class="fw-700 font-xss text-grey-900 d-flex align-items-center">Share <i class="feather-x ms-auto font-xssss btn-round-xs bg-greylight text-grey-900 me-2"></i></h4>
                    <div class="card-body p-0 d-flex">
                        <ul class="d-flex align-items-center justify-content-between mt-2">
                            <li class="me-1"><a href="#" class="btn-round-lg bg-facebook"><i class="font-xs ti-facebook text-white"></i></a></li>
                            <li class="me-1"><a href="#" class="btn-round-lg bg-twiiter"><i class="font-xs ti-twitter-alt text-white"></i></a></li>
                            <li class="me-1"><a href="#" class="btn-round-lg bg-linkedin"><i class="font-xs ti-linkedin text-white"></i></a></li>
                            <li class="me-1"><a href="#" class="btn-round-lg bg-instagram"><i class="font-xs ti-instagram text-white"></i></a></li>
                            <li><a href="#" class="btn-round-lg bg-pinterest"><i class="font-xs ti-pinterest text-white"></i></a></li>
                        </ul>
                    </div>

                    <div class="card-body p-0 d-flex">
                        <ul class="d-flex align-items-center justify-content-between mt-2">
                            <li class="me-1"><a href="#" class="btn-round-lg bg-tumblr"><i class="font-xs ti-tumblr text-white"></i></a></li>
                            <li class="me-1"><a href="#" class="btn-round-lg bg-youtube"><i class="font-xs ti-youtube text-white"></i></a></li>
                            <li class="me-1"><a href="#" class="btn-round-lg bg-flicker"><i class="font-xs ti-flickr text-white"></i></a></li>
                            <li class="me-1"><a href="#" class="btn-round-lg bg-black"><i class="font-xs ti-vimeo-alt text-white"></i></a></li>
                            <li><a href="#" class="btn-round-lg bg-whatsup"><i class="font-xs feather-phone text-white"></i></a></li>
                        </ul>
                    </div>
                    <h4 class="fw-700 font-xssss mt-4 text-grey-500 d-flex align-items-center mb-3">Copy Link</h4>
                    <i class="feather-copy position-absolute right-35 mt-3 font-xs text-grey-500"></i>
                    <input type="text" value="https://socia.be/1rGxjoJKVF0" class="bg-grey text-grey-500 font-xssss border-0 lh-32 p-2 font-xssss fw-600 rounded-3 w-100 theme-dark-bg">
                </div>
            </div>
            <div class="comments-section">
                <div class="comments-list" id="comments-${post.id}"style="display:none;"></div>
                <input type="text" id="comment-input-${post.id}" placeholder="請輸入您的留言..." />
                <button onclick="addComment(event,${post.id})">留言</button>
            </div>
        </div>

        `;
        // 加載反應數據
        loadReaction(post.id);
        //將貼文加到容器最前面
        container.prepend(postDiv);
        //加載現有流言
        loadComments(post.id);
        //綁定 see more 功能
        if(isLongContent){
            const seeMoreLink = postDiv.querySelector('.see-more');
            const contentElement = postDiv.querySelector('.post-content');

            seeMoreLink.addEventListener('click',(e)=>{
                e.preventDefault();//防止超連結跳轉
                if(seeMoreLink.innerText==="See more"){
                    contentElement.innerText=content;//顯示完整內容
                    seeMoreLink.innerText="See less";
                }else{
                    contentElement.innerText=truncatedContent;//還原截斷內容
                    seeMoreLink.innerText="See more";
                }
            });
        }
    }
    // 加載更多貼文
    function loadMorePosts(userid){
        isLoading=true;//設置加載狀態
        document.getElementById('loading').style.display = 'block';//顯示加載動畫
        const apiUrl = `/api/posts?&page=${currentPage}&pageSize=${pageSize}&uid=${userid}`;
        fetch(apiUrl)
            .then(response=>{
                if(!response.ok) throw new Error('Failed to load posts');
                return response.json();
            })
            .then(data=>{
                console.log("API 返回的資料:", data); // 除錯用，確認 API 返回內容
                currentUser = data.CurrentUser; // 儲存當前登入用戶名稱
                if(data.length>0){
                    const postsContainer = document.getElementById('posts-container');
                    data.forEach(data=>addPostToContainer(postsContainer,data));
                    currentPage++;
                }else{
                    console.log('No more posts to load');
                    window.removeEventListener('scroll',loadMorePosts);
                    document.getElementById('loading').innerText = '沒有更多貼文';
                }
            })
            .catch(error=>console.error('Error fetching posts:',error))
            .finally(()=>{
                isLoading=false;//重置加載狀態
                document.getElementById('loading').style.display = 'none';//隱藏加載動畫
            });
    }
    //載入留言
    function loadComments(postId){
        fetch(`/api/comments/${postId}`)
            .then(response=>response.json())
            .then(comments=>{
                console.log("回傳的留言資料:", comments); // 檢查後端回傳的 JSON 格式
                const commentsList = document.getElementById(`comments-${postId}`);
                commentsList.innerHTML = '';//清空現有留言

                comments.forEach(comments=>{
                    const commentDiv = document.createElement('div');
                    commentDiv.classList.add('comment');
                    commentDiv.innerHTML = `
                        <p><img src="${comments.image}" class="shadow-sm rounded-circle w45"><strong>&nbsp;${comments.userName}</strong>: ${comments.content} <small>${new Date(comments.createdAt).toLocaleString()}</small></p>
                    `;
                    commentsList.appendChild(commentDiv);
                });
                 // 更新留言數量
                const commentCount = comments.length;
                const commentCountElement = document.getElementById(`comment-count-${postId}`);
                commentCountElement.innerText = `${commentCount} 則留言`;
            })
            .catch(error=>console.error('Error fetching comments:',error));
    }

    //新增留言
    function addComment(event,postId){
        event.preventDefault(); // 防止預設行為
        const input = document.getElementById(`comment-input-${postId}`);
        const content = input.value.trim();
        console.log('Adding comment:',postId);
        if(!content) return alert('輸入留言未輸入');

        fetch('/api/comments',{
            method:'POST',
            headers:{'Content-Type':'application/json'},
            body: JSON.stringify({
                postId: postId,
                content: content,
                userName: currentUser // 使用動態取得的用戶名稱
            })
        })
        .then(response=>response.json())
        .then(comment=>{
             // 動態添加新留言
             const commentsList = document.getElementById(`comments-${postId}`);
             const commentDiv = document.createElement('div');
             commentDiv.classList.add('comment');
             commentDiv.innerHTML = `
                <p><img src="${comment.image}" class="shadow-sm rounded-circle w45"><strong>&nbsp;${comment.user}</strong>: ${comment.content} <small>${new Date(comment.createdAt).toLocaleString()}</small></p>
             `;
             commentsList.appendChild(commentDiv);
             input.value = ''; // 清空輸入框
             // 更新留言數量
             const commentCountElement = document.getElementById(`comment-count-${postId}`);
             const currentCount = parseInt(commentCountElement.innerText) || 0;
             commentCountElement.innerText = `${currentCount + 1} Comments`;
        })
        .catch(error=>console.error('Error adding comment:',error));
    }

    //反應統計數量
    function loadReaction(postId){
        fetch(`/api/reactions/${postId}`)
            .then(response=>response.json())
            .then(reactions=>{
                console.log('Reactions:',reactions);
                const reactionCount = reactions.map(r => `${r.type}: ${formatNumber(r.count)}`).join(', ');
                const reactionCountElement = document.getElementById(`reaction-count-${postId}`);
                if(reactionCountElement){
                    reactionCountElement.innerText = reactionCount || 'No reactions yet';
                }else {
                console.error(`Element with ID reaction-count-${postId} not found.`);
            }
            })
            .catch(error=>console.error('Error fetching reactions:',error));
    }
    //發送反應至後端
    function addReaction(event,postId, reactionType){
        event.preventDefault(); // 防止預設行為
        fetch('/api/reactions',{
            method:'POST',
            headers:{'Content-Type':'application/json'},
            body: JSON.stringify({
                PostId: postId,
                ReactionType1: reactionType
            })
        })
        .then(()=>{
            // 更新反應數量
            loadReaction(postId);
        })
        .catch(error=>console.error('Error adding reaction:',error));
    }
    //計算相對時間
    function calculateRelativeTime(postTime) {
        const now = new Date();
        const postDate = new Date(postTime); // 將 ISO 時間轉為 Date 物件
        const diffMs = now.getTime() - postDate.getTime(); // 毫秒差異
        const diffSec = Math.floor(diffMs / 1000); // 秒
        const diffMin = Math.floor(diffSec / 60); // 分鐘
        const diffHour = Math.floor(diffMin / 60); // 小時
        const diffDay = Math.floor(diffHour / 24); // 天

        if (diffSec < 60) return "剛剛";
        if (diffMin < 60) return `${diffMin} 分鐘前`;
        if (diffHour < 24) return `${diffHour} 小時前`;
        return `${diffDay} 天前`;
    }
    //格式化數字函數
    function formatNumber(num) {
        if (num >= 1000000) {
            return (num / 1000000).toFixed(1).replace(/\.0$/, '') + 'M'; // 百萬 (1M)
        } else if (num >= 1000) {
            return (num / 1000).toFixed(1).replace(/\.0$/, '') + 'K'; // 千 (1K)
        } else {
            return num.toString(); // 小於 1000，顯示原始數字
        }
    }
</script>