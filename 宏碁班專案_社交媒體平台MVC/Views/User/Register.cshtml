@using System.Text.Json;
@model 宏碁班專案_社交媒體平台MVC.Models.userInfo;
@{
	ViewData["Title"] = "註冊";
}
<div class="col-xl-7 vh-100 align-items-center d-flex bg-white rounded-3 overflow-hidden">
    <div class="card shadow-none border-0 ms-auto me-auto login-card">
        <div class="card-body rounded-0 text-left">
            <h2 class="fw-700 display1-size display2-md-size mb-4">Create <br>your account</h2>                        
            <form method="post" action="@Url.Action("Register", "User")">

                <div class="form-group icon-input mb-3">
                    <i class="font-sm ti-user text-grey-500 pe-0"></i>
                    <input type="text" class="style2-input ps-5 form-control text-grey-900 font-xsss fw-600" placeholder="Your Name" name="name" value="@Model?.name">
                </div>

                <div class="form-group icon-input mb-3">
                    <i class="font-sm ti-email text-grey-500 pe-0"></i>
                    <input type="text" class="style2-input ps-5 form-control text-grey-900 font-xsss fw-600" placeholder="Your Email Address" name="email" id="Email">                                
                    @Html.ValidationMessageFor(model => model.email, "",new{@class="text-danger"})
                    <span id="emailError" class="text-danger"></span> <!-- 用於顯示錯誤訊息 -->
                </div>

                <div class="form-group icon-input mb-3">
                    <input type="Password" class="style2-input ps-5 form-control text-grey-900 font-xss ls-3" placeholder="Password" name="password" value="@Model?.password">
                    <i class="font-sm ti-lock text-grey-500 pe-0"></i>                                
                    @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                </div>

                <div class="form-group icon-input mb-1">
                    <input type="Password" class="style2-input ps-5 form-control text-grey-900 font-xss ls-3" placeholder="Confirm Password" name="confirmPassword" value="@Model?.confirmPassword">
                    <i class="font-sm ti-lock text-grey-500 pe-0"></i>
                    @Html.ValidationMessageFor(model => model.confirmPassword, "", new { @class = "text-danger" })
                </div>

                <div class="form-check text-left mb-3">
                                
                </div>
                <div class="col-sm-12 p-0 text-left">
                    <div class="form-group mb-1"><input type="submit" class="form-control text-center style2-input text-white fw-600 bg-dark border-0 p-0 " value="註冊" /></div>
                    <h6 class="text-grey-500 font-xsss fw-500 mt-0 mb-0 lh-32">Already have account <a href="@Url.Action("Login","User")" class="fw-700 ms-1">Login</a></h6>
                </div>

            </form>                        
        </div>
    </div>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
<script>
	// 當Email欄位的值改變時，發送Ajax請求，避免造成資料庫負擔改成前端方式判斷
    $("#Email").on("change", function () {
        var emailValue = $("#Email").val();
        var dataValue = { email: emailValue};
        console.log("Email value: " + emailValue);
        $.ajax({
            type: "POST",
            url: "/User/CheckRepeataccount",
            data: JSON.stringify(dataValue),//確保將 dataValue 轉換為 JSON 字串格式，才不會傳入空值
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Request: " + XMLHttpRequest.toString() + "\n\nStatus: " + textStatus + "\n\nError: " + errorThrown);
            },
            success: function (result) {
                if (result) {
                    $("#emailError").text(result);
                } else {
                    $("#emailError").text("");
                }
            }
        });
    });
</script>

